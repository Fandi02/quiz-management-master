@layout AuthLayout
@page "/login"
@inject NavigationManager NavigationManager
@inject IAlertService AlertService
@inject IUserService UserService

<div class="container mt-5">
    <div class="row">
        <div class="col-12 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4">
            <div class="login-brand">
                <img src="/img/stisla-fill.svg" alt="logo" width="100" class="shadow-light rounded-circle">
            </div>

            <div class="card card-primary">
                <div class="card-header">
                    <h4>Login</h4>
                </div>

                <div class="card-body">
                    <Alert />

                    <EditForm Model="@loginModel" OnValidSubmit="OnValidSubmit" class="mb-3">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <InputText @bind-Value="loginModel.Username" class="form-control" id="username"
                                placeholder="Masukan Username" />
                            <div class="invalid-feedback">
                                <ValidationMessage For="@(() => loginModel.Username)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="password" class="control-label">Password</label>
                            <InputText @bind-Value="loginModel.Password" type="password" class="form-control"
                                id="password" placeholder="Masukan Password" />
                            <div class="invalid-feedback">
                                <ValidationMessage For="@(() => loginModel.Password)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary btn-lg btn-block" tabindex="3">
                                Login
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private QuizManagement.Shared.Data.LoginDTO loginModel = new QuizManagement.Shared.Data.LoginDTO();

    private async void OnValidSubmit()
    {
        AlertService.Clear();

        try
        {
            await UserService.Login(loginModel);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            AlertService.Error(ex.Message);
            StateHasChanged();
        }
    }
}
